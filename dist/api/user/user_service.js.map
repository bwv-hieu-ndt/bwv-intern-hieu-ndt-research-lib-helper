{"version":3,"sources":["../../../src/api/user/user_service.ts","../../../src/database/models/user.ts","../../../src/database/connection.ts"],"sourcesContent":["import UserModel from \"../../database/models/user\"\r\n\r\nclass UserService {\r\n  public async createUser(user: UserModel): Promise<UserModel> {\r\n    const newUser = UserModel.create({\r\n      id: user.id,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      email: user.email,\r\n      password: user.password,\r\n      updatedAt: new Date(),\r\n      deletedAt: new Date(),\r\n      createdAt: new Date(),\r\n    })\r\n    return newUser;\r\n  }\r\n\r\n  public async getAllUser(): Promise<UserModel[]> {\r\n    const users =  await UserModel.findAll()\r\n    return users;\r\n  }\r\n\r\n  public async getUserById(id: number): Promise<UserModel|null> {\r\n    const user =  await UserModel.findOne({ where: { id: id }  })\r\n    return user;\r\n  }\r\n\r\n  public async deleteUser(id: number): Promise<Boolean> {\r\n    const deleteUser =  await UserModel.findOne({ where: { id: id } })    \r\n    if(deleteUser) {\r\n      await deleteUser.destroy();\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default UserService","import { Model, DataTypes } from 'sequelize';\nimport connection from '../connection';\n\nexport interface UserAttributes {\n  id?: number;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n\n  updatedAt?: Date;\n  deletedAt?: Date;\n  createdAt?: Date;\n}\n\nclass UserModel extends Model<UserAttributes> implements UserAttributes {\n  public id!: number;\n  public firstName!: string;\n  public lastName!: string;\n  public email!: string;\n  public password!: string;\n\n  public readonly updatedAt!: Date;\n  public readonly deletedAt!: Date;\n  public readonly createdAt!: Date;\n}\n\nUserModel.init({\n    id: {\n      allowNull: false,\n      autoIncrement: true,\n      primaryKey: true,\n      type: DataTypes.INTEGER\n    },\n    firstName: {\n      type: DataTypes.STRING\n    },\n    lastName: {\n      type: DataTypes.STRING\n    },\n    email: {\n      type: DataTypes.STRING\n    },\n    password: {\n      type: DataTypes.STRING\n    },\n    createdAt: {\n      allowNull: false,\n      type: DataTypes.DATE\n    },\n    updatedAt: {\n      allowNull: false,\n      type: DataTypes.DATE\n    },\n  },\n  {\n    sequelize: connection,\n    modelName: 'User',\n  }\n);\n\n// associate\n// Todo.belongsTo(User, {\n//   as: 'user',\n//   foreignKey: {\n//     name: 'user_id',\n//     allowNull: false,\n//   },\n//   foreignKeyConstraint: true,\n// });\n\nexport default UserModel;","import { Sequelize } from 'sequelize';\r\nimport { DB_NAME, DB_HOST, DB_PASSWORD, DB_USERNAME } from '../configs';\r\n\r\nlet sequelizeConnection: Sequelize = new Sequelize('prepare', 'root', 'root', {\r\n  host: '127.0.0.1',\r\n  dialect: 'mysql',\r\n  port: 3306, \r\n});\r\n\r\nexport default sequelizeConnection;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA,oBAAiC;;;ACAjC,uBAA0B;AAG1B,IAAI,sBAAiC,IAAI,2BAAU,WAAW,QAAQ,QAAQ;AAAA,EAC5E,MAAM;AAAA,EACN,SAAS;AAAA,EACT,MAAM;AACR,CAAC;AAED,IAAO,qBAAQ;;;ADMf,IAAM,YAAN,cAAwB,wBAAgD;AAAA,EAC/D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAES;AAAA,EACA;AAAA,EACA;AAClB;AAEA,UAAU;AAAA,EAAK;AAAA,IACX,IAAI;AAAA,MACF,WAAW;AAAA,MACX,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,MAAM,4BAAU;AAAA,IAClB;AAAA,IACA,WAAW;AAAA,MACT,MAAM,4BAAU;AAAA,IAClB;AAAA,IACA,UAAU;AAAA,MACR,MAAM,4BAAU;AAAA,IAClB;AAAA,IACA,OAAO;AAAA,MACL,MAAM,4BAAU;AAAA,IAClB;AAAA,IACA,UAAU;AAAA,MACR,MAAM,4BAAU;AAAA,IAClB;AAAA,IACA,WAAW;AAAA,MACT,WAAW;AAAA,MACX,MAAM,4BAAU;AAAA,IAClB;AAAA,IACA,WAAW;AAAA,MACT,WAAW;AAAA,MACX,MAAM,4BAAU;AAAA,IAClB;AAAA,EACF;AAAA,EACA;AAAA,IACE,WAAW;AAAA,IACX,WAAW;AAAA,EACb;AACF;AAYA,IAAO,eAAQ;;;ADrEf,IAAM,cAAN,MAAkB;AAAA,EAChB,MAAa,WAAW,MAAqC;AAC3D,UAAM,UAAU,aAAU,OAAO;AAAA,MAC/B,IAAI,KAAK;AAAA,MACT,WAAW,KAAK;AAAA,MAChB,UAAU,KAAK;AAAA,MACf,OAAO,KAAK;AAAA,MACZ,UAAU,KAAK;AAAA,MACf,WAAW,oBAAI,KAAK;AAAA,MACpB,WAAW,oBAAI,KAAK;AAAA,MACpB,WAAW,oBAAI,KAAK;AAAA,IACtB,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EAEA,MAAa,aAAmC;AAC9C,UAAM,QAAS,MAAM,aAAU,QAAQ;AACvC,WAAO;AAAA,EACT;AAAA,EAEA,MAAa,YAAY,IAAqC;AAC5D,UAAM,OAAQ,MAAM,aAAU,QAAQ,EAAE,OAAO,EAAE,GAAO,EAAG,CAAC;AAC5D,WAAO;AAAA,EACT;AAAA,EAEA,MAAa,WAAW,IAA8B;AACpD,UAAM,aAAc,MAAM,aAAU,QAAQ,EAAE,OAAO,EAAE,GAAO,EAAE,CAAC;AACjE,QAAG,YAAY;AACb,YAAM,WAAW,QAAQ;AAAA,IAC3B;AACA,WAAO;AAAA,EACT;AACF;AAEA,IAAO,uBAAQ;","names":["import_sequelize"]}